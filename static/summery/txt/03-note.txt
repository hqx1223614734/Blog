1.初识选择器：
	ID选择器：#（ID-name） ID名在本网页中只能出现一次
	class选择器：.（class-name）class名可以出现多次
	标签选择器：name（直接选择name）在网页中定位所有该标签
2.行内样式（行内样式，外部样式）：
	起始标签内，style="属性：属性值;..."
	<p style="backgroundcolor:yeloow;color:skyblue;">内部样式</p>
3.内部样式：
	写在插在head标签内部的<style></style>标签内；
4.样式初始化：
	浏览器body标签默认有margin：8px的样式，初始化就是让所有样式都归0
	清除使用标签的默认样式，不必清除未使用的标签
	ul{list-style:none;}清除无序列表的样式，也就是前面的黑点；
	a{text-decoration:none;}清除a标签的下划线	
	通配符：*{margin:0;padding:0;}清除所有标签的margin，padding属性。但是浏览器加载时要花费很多时间，不准使用；
5.标签类型（元素类型）：
	块级元素：div,p,h1-h6,ol,ul,dl,li
		支持宽高，宽度默认和父级元素一样，
		元素独占一行，
		支持内边距和外边距，
		能包裹大部分元素
		（p是块级元素，不能包裹其他块级元素），
	内联元素（行内元素）：
		span,a,lable，strong,i,em,img,input,
		不支持宽高，只能由元素内部内容撑开，
		可以和其他内联元素共享一行，
		支持内边距（但上下内边距无视，覆盖其他元素），支持外边距但是不支持margin:auto;，
		不能包裹块级元素（a是内联元素，能包裹块级元素）
		元素间的间隔被解析（两个元素之间的换行被解析成一个空格）
		img，input标签支持部分块级元素的特性（宽，高，内外边距）
6.元素类型转换
	display:
	块->内联：inline；
		元素不具有块元素特行，
		具有内联元素的特性，
		本质不变，
		依然能包裹块元素
	内联->块：block；
		元素不具有内联元素特性，
		具有块元素特性，
		但是本质不变，
		即依然不能包裹块元素
	块/内联->行内块:inline-block;
		横排显示，
		支持宽高，
		元素间换行被解析为空格，
		支持内边距，且不会影响块级元素
		支持外边距，但不支持margin：auto；
		解决元素间隔解析：
			1）不换行
			2）注释
			3）<li></li
			   >
			4)在body里设置font-size：0，在有字体元素里设置font-size：16px；
	元素隐藏：none；
		display：block；显示元素，块元素具有显示之意












